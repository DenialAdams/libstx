.TH libistr 3 libistr\-VERSION
.SH NAME
libistr \- Improved String Library
.SH SYNOPSIS
.B #include <libistr.h>
.PP
.B typedef struct 
.I istring istring;
.SH DESCRIPTION
The istring library (hereafter referred to as libistr) is an efficient and 
simple dynamic string library for C. It provides the istring structure and 
functions that operate on them. istrings are fully compatible with the 
standard ANSI C <string.h> style functions, as libistr will always make sure 
an istring ends with a NULL byte at the end of the data it contains.
As a bonus, istrings can be used to hold arbitrary values, including 0.
.PP
libistr includes utf8 helper functions that let unicode characters be
manipulated by the number of unicode characters rather than the size in bytes.
.PP
Memory allocation for istrings is also efficient, as the scheme for increasing
an istring's size is to keep it as a power of two e.g. 32, 64, 512.
.PP
.SH FUNCTIONS
.I For more detailed documentation please look at libistr.h
.TP
.B istr_new
Initialize a new istring from an existing istring.
.TP
.B istr_new_bytes
Initialize a new istring from arbitrary bytes.
.TP
.B istr_new_cstr
Initialize a new istring from a string with a terminating null-byte.
.TP
.B istr_free
Free all memory allocated by any istring initialization function.
.TP
.B istr_eq
Check if two istings contain the same contents.
.TP
.B istr_slice
Copy a slice of characters from one string to another.
.TP
.B istr_assign_bytes
Reassign an istring's contents to arbitrary bytes, rewriting any old contents.
.TP
.B istr_assign_cstr
Reassign an istring's contents to a string with a terminating null-byte.
.TP
.B istr_truncate
Shorten the istring to a specified length.
.TP
.B istr_pop_byte
Remove the last byte in an istring and returns it.
.TP
.B istr_write
Overwrite an istring at an index with another istring.
.TP
.B istr_write_bytes
Overwrite an istring at an index with arbitrary bytes.
.TP
.B istr_prepend
Prepend a copy of an istring to another istring.
.TP
.B istr_prepend_bytes
Prepend arbitrary bytes onto an istring.
.TP
.B istr_append
Append a copy of an istring to another istring.
.TP
.B istr_append_bytes
Append arbitrary bytes onto an istring.
.TP
.B istr_append_cstr
Append a c-style string with a terminating null-byte to an istring.
.TP
.B istr_insert
Insert an istring into an istring at an index without overwriting.
.TP
.B istr_insert_bytes
Insert arbitrary bytes into an istring at an index without overwriting.
.SH CONFORMING TO
The
.I libistr
library is guaranteed to conform with C99 or later
.SH AUTHOR
Written by Todd O. Gaunt
