.TH STXAPP 3 libstx
.SH NAME
stxapp, stxappstx, stxapp_uni, stxappdup - append to struct stx.
.SH SYNOPSIS

#include <libstx.h>

stx *stxapp_mem(stx *\fIsp\fP, const char *\fIsrc\fP, size_t \fIlen\fP);

stx *stxapp_str(stx *\fIsp\fP, const char *\fIsrc\fP);

stx *stxapp_uni(stx *\fIsp\fP, uint32_t \fIwc\fP);

stx *stxapp_stx(stx *\fIsp\fP, const stx *\fIsrc\fP);

#include <libstx.hpp>

stx *libstx::app(stx *\fIsp\fP, const char *\fIsrc\fP, size_t \fIlen\fP);

stx *libstx::app(stx *\fIsp\fP, const char *\fIsrc\fP);

stx *libstx::app(stx *\fIsp\fP, uint32_t \fIwc\fP);

stx *libstx::app(stx *\fIsp\fP, const stx *\fIsrc\fP);
.SH DESCRIPTION
.B stxapp()
appends
.I len
bytes from
.I src
to
.IR sp .
.P
.B stxappstx()
appends
.I src
to
.IR sp .
.P
.B stxappuni()
converts
.I wc
from a utf32 unicode point character to it's corresponding utf8 byte sequence.
It then appends that utf8 byte sequence to
.IR sp .
.SH RETURN VALUE
.BR stxapp() ,
.BR stxapp_libstx() ,
and
.B stxapp_dup()
return a pointer to
.I sp
to allow for function composition.
.P
.BR stxapp_uni() ,
can fail if the unicode point is outside the largest value of unicode possible,
and will return NULL if that is the case.
.SH SEE ALSO
.BR libstx (7)
